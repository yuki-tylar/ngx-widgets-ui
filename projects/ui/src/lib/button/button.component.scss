@import "../assets/_general";
@import "../assets/color";

:host{
  font-size: 14px;
  color: inherit;
  border-color: inherit;
}

.button-container{
  font-size: inherit;
  border-color: inherit;
  color: inherit;
}

button{
  position: relative;
  font-size: 1em;
  line-height: 1em;
  color: inherit;
  border-color: inherit;
  overflow: hidden;
  border-width: 1px;
  border-style: solid;
}

/** border class */
button{
  .flat & { border-width: 0; }
  .pill & { border-radius: 100px; }
  .rounded & { border-radius: 0.3em; }
  
  @for $i from 1 through 20 {
    .rounded-#{$i} & { border-radius: #{$i}px; }
  }
}

/** padding class*/
button{
  padding: 0.4em 1.2em;

  &.icon-only{ padding: 0.5em; }
}

/** inner style */
button{
  display: inline-flex;
  align-items: center;

  .icon{ font-size: 1.5em; }
  .icon+.label{ padding-left: 0.38em; }

  .icon, .label{ position: relative; }

  .bg{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

button.pushing{ 
  transform: scale(0.98); 
  transform-origin: center;
}

.animate{
  transition-property: color, border-color, background-color;
  transition-duration: 300ms;
}

$colorBorderActive: var(--ngx-item-accent, $blue);
$colorBorderActiveDark: var(--ngx-item-accent-dark, $yellow);

$colorBG: var(--ngx-item-primary, transparent);
$colorBGActive: var(--ngx-item-accent, $blue);

$colorBGDark: var(--ngx-item-primary-dark, transparent);
$colorBGActiveDark: var(--ngx-item-accent-dark, $yellow);

$colorText: var(--ngx-item-accent, $blue);
$colorTextActive: var(--ngx-item-on-accent, white);

$colorTextDark: var(--ngx-item-accent-dark, $yellow);
$colorTextActiveDark: var(--ngx-item-on-accent-dark, black);

.color-button{
  color: inherit;

  &.active{ 
    background: $colorBGActive; 
    border-color: $colorBorderActive;
  }

  .ngx-dark & {
    &.active{
      border-color: $colorBorderActiveDark;
      background: $colorBGActiveDark;
    }
  }

  .ngx-dark-auto &{
    &.active{
      @media (prefers-color-scheme: dark){
        border-color: $colorBorderActiveDark;
        background: $colorBGActiveDark;
      }  
    }
  }
}

.color-text{
  color: inherit;

  &.active{ color: $colorTextActive; }

  .ngx-dark &{ 
    &.active{ color: $colorTextActiveDark; }
  }

  .ngx-dark-auto &{
    @media (prefers-color-scheme: dark){
      &.active{ color: $colorTextActiveDark; }
    }
  }
}

.flat{
  .color-button, .color-button.active, 
  .dark .color-button, .dark .color-button.active{
    background: none;
    border-color: none;
  }

  .color-text{
    &.active{ color: $colorBGActive; }
  }
  &.ngx-dark .color-text {
    &.active{ color: $colorBGActiveDark; }
  }

  &.ngx-dark-auto .color-text{
    @media (prefers-color-scheme: dark){
      &.active{ color: $colorBGActiveDark; }
    }
  }
}

@each $name, $value in $presetColors {
  .#{$name} {
    .color-button{ 
      border-color: map-get($value, 'bg');
      &.active{
        background: map-get($value, 'bg');
        border-color: map-get($value, 'bg');
      }
    }

    .color-text{
      color: map-get($value, 'bg');
      &.active{
        color: map-get($value, 'text');
      }
    }

    &.flat{
      .color-button, .color-button.active, 
      .dark .color-button, .dark .color-button.active{
        background: none;
        border-color: none;
      }

      .color-text{
        color: inherit;
        &.active{ color: map-get($value, 'bg'); }
      }
    }
  }
}